// Generated by Dagger (https://dagger.dev).
package com.company.attendance.ui.screens.login;

import com.company.attendance.data.repository.AttendanceRepository;
import com.company.attendance.data.repository.AuthRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class EnhancedLoginViewModel_Factory implements Factory<EnhancedLoginViewModel> {
  private final Provider<AuthRepository> authRepositoryProvider;

  private final Provider<AttendanceRepository> attendanceRepositoryProvider;

  public EnhancedLoginViewModel_Factory(Provider<AuthRepository> authRepositoryProvider,
      Provider<AttendanceRepository> attendanceRepositoryProvider) {
    this.authRepositoryProvider = authRepositoryProvider;
    this.attendanceRepositoryProvider = attendanceRepositoryProvider;
  }

  @Override
  public EnhancedLoginViewModel get() {
    return newInstance(authRepositoryProvider.get(), attendanceRepositoryProvider.get());
  }

  public static EnhancedLoginViewModel_Factory create(
      Provider<AuthRepository> authRepositoryProvider,
      Provider<AttendanceRepository> attendanceRepositoryProvider) {
    return new EnhancedLoginViewModel_Factory(authRepositoryProvider, attendanceRepositoryProvider);
  }

  public static EnhancedLoginViewModel newInstance(AuthRepository authRepository,
      AttendanceRepository attendanceRepository) {
    return new EnhancedLoginViewModel(authRepository, attendanceRepository);
  }
}
