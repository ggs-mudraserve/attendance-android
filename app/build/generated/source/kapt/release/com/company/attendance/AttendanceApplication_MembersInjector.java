// Generated by Dagger (https://dagger.dev).
package com.company.attendance;

import com.company.attendance.service.WiFiMonitoringService;
import com.company.attendance.service.WorkManagerService;
import com.company.attendance.utils.SessionManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AttendanceApplication_MembersInjector implements MembersInjector<AttendanceApplication> {
  private final Provider<SessionManager> sessionManagerProvider;

  private final Provider<WiFiMonitoringService> wifiMonitoringServiceProvider;

  private final Provider<WorkManagerService> workManagerServiceProvider;

  public AttendanceApplication_MembersInjector(Provider<SessionManager> sessionManagerProvider,
      Provider<WiFiMonitoringService> wifiMonitoringServiceProvider,
      Provider<WorkManagerService> workManagerServiceProvider) {
    this.sessionManagerProvider = sessionManagerProvider;
    this.wifiMonitoringServiceProvider = wifiMonitoringServiceProvider;
    this.workManagerServiceProvider = workManagerServiceProvider;
  }

  public static MembersInjector<AttendanceApplication> create(
      Provider<SessionManager> sessionManagerProvider,
      Provider<WiFiMonitoringService> wifiMonitoringServiceProvider,
      Provider<WorkManagerService> workManagerServiceProvider) {
    return new AttendanceApplication_MembersInjector(sessionManagerProvider, wifiMonitoringServiceProvider, workManagerServiceProvider);
  }

  @Override
  public void injectMembers(AttendanceApplication instance) {
    injectSessionManager(instance, sessionManagerProvider.get());
    injectWifiMonitoringService(instance, wifiMonitoringServiceProvider.get());
    injectWorkManagerService(instance, workManagerServiceProvider.get());
  }

  @InjectedFieldSignature("com.company.attendance.AttendanceApplication.sessionManager")
  public static void injectSessionManager(AttendanceApplication instance,
      SessionManager sessionManager) {
    instance.sessionManager = sessionManager;
  }

  @InjectedFieldSignature("com.company.attendance.AttendanceApplication.wifiMonitoringService")
  public static void injectWifiMonitoringService(AttendanceApplication instance,
      WiFiMonitoringService wifiMonitoringService) {
    instance.wifiMonitoringService = wifiMonitoringService;
  }

  @InjectedFieldSignature("com.company.attendance.AttendanceApplication.workManagerService")
  public static void injectWorkManagerService(AttendanceApplication instance,
      WorkManagerService workManagerService) {
    instance.workManagerService = workManagerService;
  }
}
