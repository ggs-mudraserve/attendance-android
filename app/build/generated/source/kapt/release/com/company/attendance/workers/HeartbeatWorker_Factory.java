// Generated by Dagger (https://dagger.dev).
package com.company.attendance.workers;

import android.content.Context;
import androidx.work.WorkerParameters;
import com.company.attendance.data.repository.AttendanceRepository;
import com.company.attendance.service.WiFiMonitoringService;
import com.company.attendance.utils.NotificationUtils;
import com.company.attendance.utils.PreferencesManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class HeartbeatWorker_Factory {
  private final Provider<AttendanceRepository> attendanceRepositoryProvider;

  private final Provider<PreferencesManager> preferencesManagerProvider;

  private final Provider<WiFiMonitoringService> wifiMonitoringServiceProvider;

  private final Provider<NotificationUtils> notificationUtilsProvider;

  public HeartbeatWorker_Factory(Provider<AttendanceRepository> attendanceRepositoryProvider,
      Provider<PreferencesManager> preferencesManagerProvider,
      Provider<WiFiMonitoringService> wifiMonitoringServiceProvider,
      Provider<NotificationUtils> notificationUtilsProvider) {
    this.attendanceRepositoryProvider = attendanceRepositoryProvider;
    this.preferencesManagerProvider = preferencesManagerProvider;
    this.wifiMonitoringServiceProvider = wifiMonitoringServiceProvider;
    this.notificationUtilsProvider = notificationUtilsProvider;
  }

  public HeartbeatWorker get(Context context, WorkerParameters workerParams) {
    return newInstance(context, workerParams, attendanceRepositoryProvider.get(), preferencesManagerProvider.get(), wifiMonitoringServiceProvider.get(), notificationUtilsProvider.get());
  }

  public static HeartbeatWorker_Factory create(
      Provider<AttendanceRepository> attendanceRepositoryProvider,
      Provider<PreferencesManager> preferencesManagerProvider,
      Provider<WiFiMonitoringService> wifiMonitoringServiceProvider,
      Provider<NotificationUtils> notificationUtilsProvider) {
    return new HeartbeatWorker_Factory(attendanceRepositoryProvider, preferencesManagerProvider, wifiMonitoringServiceProvider, notificationUtilsProvider);
  }

  public static HeartbeatWorker newInstance(Context context, WorkerParameters workerParams,
      AttendanceRepository attendanceRepository, PreferencesManager preferencesManager,
      WiFiMonitoringService wifiMonitoringService, NotificationUtils notificationUtils) {
    return new HeartbeatWorker(context, workerParams, attendanceRepository, preferencesManager, wifiMonitoringService, notificationUtils);
  }
}
