// Generated by Dagger (https://dagger.dev).
package com.company.attendance.di;

import com.company.attendance.data.local.AttendanceDatabase;
import com.company.attendance.data.local.AttendanceRecordDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideAttendanceRecordDaoFactory implements Factory<AttendanceRecordDao> {
  private final Provider<AttendanceDatabase> databaseProvider;

  public AppModule_ProvideAttendanceRecordDaoFactory(
      Provider<AttendanceDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public AttendanceRecordDao get() {
    return provideAttendanceRecordDao(databaseProvider.get());
  }

  public static AppModule_ProvideAttendanceRecordDaoFactory create(
      Provider<AttendanceDatabase> databaseProvider) {
    return new AppModule_ProvideAttendanceRecordDaoFactory(databaseProvider);
  }

  public static AttendanceRecordDao provideAttendanceRecordDao(AttendanceDatabase database) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideAttendanceRecordDao(database));
  }
}
