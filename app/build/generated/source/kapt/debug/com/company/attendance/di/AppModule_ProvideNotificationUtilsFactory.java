// Generated by Dagger (https://dagger.dev).
package com.company.attendance.di;

import android.content.Context;
import com.company.attendance.utils.NotificationUtils;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideNotificationUtilsFactory implements Factory<NotificationUtils> {
  private final Provider<Context> contextProvider;

  public AppModule_ProvideNotificationUtilsFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public NotificationUtils get() {
    return provideNotificationUtils(contextProvider.get());
  }

  public static AppModule_ProvideNotificationUtilsFactory create(
      Provider<Context> contextProvider) {
    return new AppModule_ProvideNotificationUtilsFactory(contextProvider);
  }

  public static NotificationUtils provideNotificationUtils(Context context) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideNotificationUtils(context));
  }
}
