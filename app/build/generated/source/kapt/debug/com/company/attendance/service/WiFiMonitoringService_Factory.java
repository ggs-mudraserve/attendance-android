// Generated by Dagger (https://dagger.dev).
package com.company.attendance.service;

import android.content.Context;
import com.company.attendance.data.local.ApprovedWiFiDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class WiFiMonitoringService_Factory implements Factory<WiFiMonitoringService> {
  private final Provider<Context> contextProvider;

  private final Provider<ApprovedWiFiDao> approvedWiFiDaoProvider;

  public WiFiMonitoringService_Factory(Provider<Context> contextProvider,
      Provider<ApprovedWiFiDao> approvedWiFiDaoProvider) {
    this.contextProvider = contextProvider;
    this.approvedWiFiDaoProvider = approvedWiFiDaoProvider;
  }

  @Override
  public WiFiMonitoringService get() {
    return newInstance(contextProvider.get(), approvedWiFiDaoProvider.get());
  }

  public static WiFiMonitoringService_Factory create(Provider<Context> contextProvider,
      Provider<ApprovedWiFiDao> approvedWiFiDaoProvider) {
    return new WiFiMonitoringService_Factory(contextProvider, approvedWiFiDaoProvider);
  }

  public static WiFiMonitoringService newInstance(Context context,
      ApprovedWiFiDao approvedWiFiDao) {
    return new WiFiMonitoringService(context, approvedWiFiDao);
  }
}
