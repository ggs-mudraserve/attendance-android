// Generated by Dagger (https://dagger.dev).
package com.company.attendance.ui.screens.onboarding;

import com.company.attendance.data.repository.AttendanceRepository;
import com.company.attendance.data.repository.AuthRepository;
import com.company.attendance.utils.DeviceUtils;
import com.company.attendance.utils.PreferencesManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class OnboardingViewModel_Factory implements Factory<OnboardingViewModel> {
  private final Provider<AttendanceRepository> repositoryProvider;

  private final Provider<AuthRepository> authRepositoryProvider;

  private final Provider<DeviceUtils> deviceUtilsProvider;

  private final Provider<PreferencesManager> preferencesManagerProvider;

  public OnboardingViewModel_Factory(Provider<AttendanceRepository> repositoryProvider,
      Provider<AuthRepository> authRepositoryProvider, Provider<DeviceUtils> deviceUtilsProvider,
      Provider<PreferencesManager> preferencesManagerProvider) {
    this.repositoryProvider = repositoryProvider;
    this.authRepositoryProvider = authRepositoryProvider;
    this.deviceUtilsProvider = deviceUtilsProvider;
    this.preferencesManagerProvider = preferencesManagerProvider;
  }

  @Override
  public OnboardingViewModel get() {
    return newInstance(repositoryProvider.get(), authRepositoryProvider.get(), deviceUtilsProvider.get(), preferencesManagerProvider.get());
  }

  public static OnboardingViewModel_Factory create(
      Provider<AttendanceRepository> repositoryProvider,
      Provider<AuthRepository> authRepositoryProvider, Provider<DeviceUtils> deviceUtilsProvider,
      Provider<PreferencesManager> preferencesManagerProvider) {
    return new OnboardingViewModel_Factory(repositoryProvider, authRepositoryProvider, deviceUtilsProvider, preferencesManagerProvider);
  }

  public static OnboardingViewModel newInstance(AttendanceRepository repository,
      AuthRepository authRepository, DeviceUtils deviceUtils,
      PreferencesManager preferencesManager) {
    return new OnboardingViewModel(repository, authRepository, deviceUtils, preferencesManager);
  }
}
